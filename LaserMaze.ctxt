#BlueJ class context
comment0.target=LaserMaze
comment0.text=\r\n\ Write\ a\ description\ of\ class\ LaserMaze\ here.\r\n\r\n\ @author\ Justyn\ McHarg,\ Collin\ Adams,\ Devante\ Saenger\r\n\ \ \ \ \ \ \ \ \ Dylan\ Lane,\ Ashley\ Hughes\r\n\ @version\ 3/20/2018\r\n
comment1.params=
comment1.target=LaserMaze()
comment1.text=\r\n\ Contructor\ for\ LaserMaze\ class\r\n
comment10.params=g
comment10.target=void\ paintComponent(java.awt.Graphics)
comment10.text=\r\n\ Graphics\ method\ that\ draws\ the\ board\ itself\ and\ displays\ the\ images\ \r\n\ used\ for\ the\ pieces\ in\ the\ game.\r\n
comment11.params=
comment11.target=void\ createAndShowGUI()
comment11.text=\r\n\ Creates\ the\ JFrame\ for\ the\ project.\ Asks\ user\ which\ puzzle\ they\ would\ \r\n\ like\ to\ play.\r\n
comment12.params=x
comment12.target=int\ getCol(int)
comment12.text=\r\n\ Method\ that\ returns\ an\ int\ based\ on\ the\ given\ parameter.\r\n\ \r\n\ @param\ \ \ int\ x\ \ \ Given\ input\ value(Usually\ a\ coordinate\ value)\r\n\ @return\ \ int\ \ \ \ \ Value\ is\ based\ upon\ given\ parameter\r\n
comment13.params=y
comment13.target=int\ getRow(int)
comment13.text=\r\n\ Method\ that\ returns\ an\ int\ based\ on\ the\ given\ parameter.\r\n\ \r\n\ @param\ \ \ int\ y\ \ \ Given\ input\ value(Usually\ a\ coordinate\ value)\r\n\ @return\ \ int\ \ \ \ \ Value\ is\ based\ upon\ given\ parameter\r\n
comment14.params=x
comment14.target=int\ getXCoor(int)
comment14.text=\r\n\ Method\ that\ returns\ an\ int\ based\ on\ the\ given\ parameter.\r\n\ \r\n\ @param\ \ \ int\ x\ \ \ Given\ input\ value(Usually\ a\ coordinate\ value)\r\n\ @return\ \ int\ \ \ \ \ Value\ is\ based\ upon\ given\ parameter\r\n
comment15.params=y
comment15.target=int\ getYCoor(int)
comment15.text=\r\n\ Method\ that\ returns\ an\ int\ based\ on\ the\ given\ parameter.\r\n\ \r\n\ @param\ \ \ int\ y\ \ \ Given\ input\ value(Usually\ a\ coordinate\ value)\r\n\ @return\ \ int\ \ \ \ \ Value\ is\ based\ upon\ given\ parameter\r\n
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment16.text=\r\n\ Main\ method\ that\ initiates\ the\ program\r\n
comment17.params=
comment17.target=void\ run()
comment2.params=e
comment2.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment3.params=e
comment3.target=void\ mouseExited(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment4.text=\r\n\ This\ method\ is\ used\ for\ detecting\ input\ if\ the\ user\ has\ either\r\n\ right\ or\ left\ clicked.\ If\ the\ user\ left\ clicks\ the\ piece\ will\ rotate\ \r\n\ if\ that\ is\ allowed\ for\ the\ current\ puzzle\ trying\ to\ be\ solved.\r\n\ Right\ click\ moves\ the\ pieces\ that\ are\ displayed\ at\ the\ top\ of\ the\ board\r\n\ at\ the\ beginning\ of\ the\ game\ as\ long\ as\ the\ space\ you\ are\ trying\ to\ move\r\n\ the\ piece\ to\ is\ a\ blank\ space.\r\n
comment5.params=
comment5.target=void\ fireLaser()
comment5.text=\r\n\ This\ method\ checks\ to\ see\ if\ the\ pieces\ for\ the\ 1st\ board\ are\ in\r\n\ the\ correct\ place\ when\ the\ player\ wants\ to\ fire\ the\ laser\r\n
comment6.params=direction
comment6.target=void\ fireLaser(int)
comment6.text=\r\n\ This\ method\ checks\ to\ see\ if\ the\ pieces\ for\ the\ 2nd\ board\ are\ in\r\n\ the\ correct\ place\ when\ the\ player\ wants\ to\ fire\ the\ laser\r\n
comment7.params=
comment7.target=void\ gridMaker()
comment7.text=\r\n\ This\ method\ makes\ the\ 2D\ array\ that\ is\ used\ as\ a\ string\ \r\n\ representation\ of\ the\ current\ board\ on\ display\r\n
comment8.params=e
comment8.target=void\ mousePressed(java.awt.event.MouseEvent)
comment9.params=e
comment9.target=void\ mouseReleased(java.awt.event.MouseEvent)
numComments=18
